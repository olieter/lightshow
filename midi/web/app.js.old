/* minimal helper */
const $ = (q) => document.querySelector(q);
const $$ = (q) => [...document.querySelectorAll(q)];
const API = "/api";

let AI = null, BAND = null, COLORS = null;
let POLL = null;

/* Tabs */
$$('#tabs .tab').forEach(btn=>{
  btn.onclick = ()=>{
    $$('#tabs .tab').forEach(b=>b.classList.remove('active'));
    btn.classList.add('active');
    const tab = btn.dataset.tab;
    $$('.panel').forEach(p=>p.classList.remove('show'));
    $('#'+tab).classList.add('show');
  };
});

/* Fetch helpers */
async function getJSON(p){ const r=await fetch(API+p); return r.json(); }
async function postJSON(p,data){ const r=await fetch(API+p,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}); return r.json(); }

/* Init */
async function init(){
  try{
    AI   = await getJSON('/ai/clusters');
    BAND = await getJSON('/band/clusters');
    COLORS = await fetch('/assets/colors.json').then(_=>_.json()).catch(()=>null);
  }catch(e){}
  buildAI();
  buildBand();
  buildAIControls();
  POLL = setInterval(refreshState, 800);
  setupAudio();
  bindManual();
  bindFixtures();
  bindForce();
  bindSettings();
  $('#netBadge').textContent = 'API: OK';
}

/* ---------- STATE ---------- */
async function refreshState(){
  try{
    const s = await getJSON('/state');
    $('#modeBadge').textContent = 'mode: '+s.mode.toUpperCase();
    $('#aiBadge').textContent   = 'AI: '+(s.ai_enabled ? (s.ai_full? 'FULL':'ON') : 'OFF');
    $('#bandBadge').textContent = 'BAND: '+(s.band_running? (s.band_paused?'PAUSE':'RUN') : 'IDLE');

    // reflect AI UI
    if($('#aiColorLock')){
      $('#aiColorLock').checked = !!s.ai_color_lock.enabled;
      $('#aiColorHex').value = s.ai_color_lock.hex || '#FFFFFF';
    }
    // reflect BAND UI
    if($('#bandColorLock')){
      $('#bandColorLock').checked = !!s.band_color_lock.enabled;
      $('#bandColorHex').value = s.band_color_lock.hex || '#FFE6CC';
      $('#bandAccentHex').value = (s.band_accent && s.band_accent.hex) || '#FFB000';
      $('#bandAccentPct').value = (s.band_accent && s.band_accent.pct) || 10;
    }
  }catch(e){
    $('#netBadge').textContent = 'API: NOK';
  }
}

/* ---------- AI TAB ---------- */
function buildAI(){
  // clusters
  const wrap = $('#aiClusters'); wrap.innerHTML = '';
  AI.clusters.forEach(c=>{
    const b=document.createElement('button'); b.className='chip';
    b.textContent=c.label; b.onclick=()=>selectAI(c.key);
    wrap.appendChild(b);
  });
  // quick colors
  const colors = ["#FFE6CC","#F2F5FF","#FFB000","#7FDBFF","#00FFFF","#FF00FF","#B6FF00","#FFC107","#FFFFFF","#0000FF","#00FF00","#FF0000"];
  const pc = $('#aiQuickColors'); pc.innerHTML='';
  colors.forEach(h=>{
    const s=document.createElement('span'); s.className='swatch'; s.style.background=h;
    s.onclick=()=>{
      $('#aiColorHex').value=h; $('#aiColorLock').checked=true;
      postJSON('/ai/color',{enabled:true,hex:h});
    };
    pc.appendChild(s);
  });
  // include grid
  const inc = ["pars_big","pars_small","moving_par","wash_fx","moving_head","scanner","dual_scan","wled_tubes","tube_dmx","guirlande"];
  const gi = $('#aiInclude'); gi.innerHTML='';
  inc.forEach(k=>{
    const id='ai_inc_'+k;
    gi.insertAdjacentHTML('beforeend', `<label><input type="checkbox" id="${id}" checked> ${k}</label>`);
    $('#'+id).onchange=()=>postJSON('/ai/include',{[k]:$('#'+id).checked});
  });
}
function buildAIControls(){
  // Tube DMX buttons
  const td = $('#aiTubeDMX'); td.innerHTML='';
  ["on_off","wave","pulse","chaos","rainbow","ai_on","speed_plus","speed_minus"].forEach(k=>{
    const b=document.createElement('button'); b.className='pill'; b.textContent=k.replace('_',' ');
    b.onclick=()=>{
      if(k==="speed_plus"||k==="speed_minus"){ /* not stored in backend; optional future */ return; }
      if(k==="ai_on"){ postJSON('/mode',{mode:'ai'}); return; }
      postJSON('/effects',{target:'tube_dmx',fx:k});
    };
    td.appendChild(b);
  });
  // WLED Tubes
  const wt = $('#aiWLEDTubes'); wt.innerHTML='';
  ["on_off","Sinelon","Scanner","BPM","Solid","Rainbow","Juggle","Comet","ai_follow"].forEach(k=>{
    const b=document.createElement('button'); b.className='pill'; b.textContent=k;
    b.onclick=()=>{
      if(k==="on_off"){ postJSON('/effects',{target:'wled_tubes',fx:'on_off'}); }
      else if(k==="ai_follow"){ postJSON('/mode',{mode:'ai'}); }
      else { postJSON('/effects',{target:'wled_tubes',fx:k}); }
    };
    wt.appendChild(b);
  });
  // Guirlande
  const g = $('#aiGuirlande'); g.innerHTML='';
  ["on_off","Breathe","Theater","Rainbow","Solid","Blink"].forEach(k=>{
    const b=document.createElement('button'); b.className='pill'; b.textContent=k;
    b.onclick=()=>{
      if(k==="on_off"){ postJSON('/effects',{target:'guirlande',fx:'on_off'}); }
      else { postJSON('/effects',{target:'guirlande',fx:k}); }
    };
    g.appendChild(b);
  });

  // AI color controls
  $('#aiColorLock').onchange=()=>postJSON('/ai/color',{enabled:$('#aiColorLock').checked,hex:$('#aiColorHex').value});
  $('#aiColorHex').oninput =()=>postJSON('/ai/color',{enabled:true,hex:$('#aiColorHex').value});
  $('#aiFullToggle').onclick=()=>postJSON('/show/control',{cmd:'ai_full_toggle'});
}

/* AI select */
async function selectAI(key){
  await postJSON('/ai/select',{cluster:key});
  // subchips
  const cluster = AI.clusters.find(c=>c.key===key);
  const subsDiv = $('#aiSubs'); subsDiv.innerHTML='';
  (cluster.subs||[]).forEach(s=>{
    const b=document.createElement('button'); b.className='chip subtle'; b.textContent=s;
    b.onclick=()=>postJSON('/ai/select',{cluster:key,sub:s});
    subsDiv.appendChild(b);
  });
}

/* ---------- BAND TAB ---------- */
function buildBand(){
  const wrap = $('#bandClusters'); wrap.innerHTML='';
  BAND.clusters.forEach(c=>{
    const b=document.createElement('button'); b.className='chip'; b.textContent=c.label;
    b.onclick=()=>selectBand(c.key);
    wrap.appendChild(b);
  });
  // quick colors
  const colors = ["#FFE6CC","#FFFFFF","#FFB000","#F2F5FF","#7FDBFF","#00FFFF","#FF4D6D"];
  const pc = $('#bandQuickColors'); pc.innerHTML='';
  colors.forEach(h=>{
    const s=document.createElement('span'); s.className='swatch'; s.style.background=h;
    s.onclick=()=>{
      $('#bandColorHex').value=h; $('#bandColorLock').checked=true;
      postJSON('/band/color',{enabled:true,hex:h});
    };
    pc.appendChild(s);
  });

  // includes
  const inc = ["pars_big","pars_small","moving_par","wash_fx","moving_head","scanner","dual_scan","wled_tubes","tube_dmx","guirlande"];
  const bi = $('#bandInclude'); bi.innerHTML='';
  inc.forEach(k=>{
    const id='band_inc_'+k;
    bi.insertAdjacentHTML('beforeend', `<label><input type="checkbox" id="${id}" checked> ${k}</label>`);
    $('#'+id).onchange=()=>postJSON('/band/color',{include:{[k]:$('#'+id).checked}});
  });

  // color locks & accent
  $('#bandColorLock').onchange=()=>postJSON('/band/color',{enabled:$('#bandColorLock').checked,hex:$('#bandColorHex').value});
  $('#bandColorHex').oninput =()=>postJSON('/band/color',{enabled:true,hex:$('#bandColorHex').value});
  $('#bandAccentHex').oninput=()=>postJSON('/band/color',{accent:{enabled:true,hex:$('#bandAccentHex').value,pct:parseInt($('#bandAccentPct').value)}});
  $('#bandAccentPct').oninput=()=>postJSON('/band/color',{accent:{enabled:true,hex:$('#bandAccentHex').value,pct:parseInt($('#bandAccentPct').value)}});

  // control
  $('#bandPause').onclick =()=>postJSON('/show/control',{cmd:'band_pause_toggle'});
  $('#bandStop').onclick  =()=>postJSON('/show/control',{cmd:'band_stop'});
  $('#aiToggle').onclick  =()=>postJSON('/show/control',{cmd:'ai_toggle'});
  $('#aiFullToggle2').onclick=()=>postJSON('/show/control',{cmd:'ai_full_toggle'});

  // Aim & Store
  $('#aimStore').onclick=()=>{
    postJSON('/rehearsal',{
      save:true,
      fixture:$('#aimFixture').value,
      pan_off:parseInt($('#aimPan').value||0),
      tilt_off:parseInt($('#aimTilt').value||0),
      color_fix:$('#aimColor').value,
      gobo_fix:$('#aimGobo').value||undefined
    });
  };
  $('#aimExit').onclick =()=>postJSON('/rehearsal',{active:false});
}

/* Band select */
async function selectBand(key){
  await postJSON('/band/select',{cluster:key});
  const cluster = BAND.clusters.find(c=>c.key===key);
  const subsDiv = $('#bandSubs'); subsDiv.innerHTML='';
  (cluster.subs||[]).forEach(s=>{
    const b=document.createElement('button'); b.className='chip subtle'; b.textContent=s;
    b.onclick=()=>postJSON('/band/select',{cluster:key,sub:s});
    subsDiv.appendChild(b);
  });
}

/* ---------- MANUAL ---------- */
function bindManual(){
  $$('#manual [data-level]').forEach(el=>{
    el.oninput = ()=>postJSON('/levels',{control:el.dataset.level,value:parseInt(el.value)});
  });
  $$('#manual [data-param]').forEach(el=>{
    el.oninput = ()=>postJSON('/params',{control:el.dataset.param,value:parseInt(el.value)});
  });
}

/* ---------- FIXTURES ---------- */
function bindFixtures(){
  $('#midiLearn').onchange = ()=>{
    // alleen opslaan in file via backend future; voor nu loggen
    postJSON('/midi/log',{learn:$('#midiLearn').checked});
  };
  $('#tunSave').onclick = ()=>{
    postJSON('/rehearsal',{
      save:true,
      fixture:$('#tunFixture').value,
      pan_off:parseInt($('#tunPan').value||0),
      tilt_off:parseInt($('#tunTilt').value||0),
      color_fix:$('#tunColor').value,
      gobo_fix:$('#tunGobo').value||undefined
    });
  };
}

/* ---------- FORCE ---------- */
function bindForce(){
  $$('#force [data-force]').forEach(btn=>{
    btn.onclick = ()=>postJSON('/force',{set:parseInt(btn.dataset.force)});
  });
}

/* ---------- SETTINGS ---------- */
function bindSettings(){
  $('#shutdown').onclick = ()=>postJSON('/safe_shutdown',{}).then(()=>alert('Shutdown aangevraagd'));
}

/* ---------- AUDIO / VU (iPad mic) ---------- */
let audioCtx=null, analyser=null, raf=null;
function setupAudio(){
  $('#audioSource').onchange = ()=>{
    if($('#audioSource').value==='ipad_mic'){ startMicVU(); } else { stopMicVU(); }
  };
}
async function startMicVU(){
  stopMicVU();
  try{
    audioCtx = new (window.AudioContext||window.webkitAudioContext)();
    const stream = await navigator.mediaDevices.getUserMedia({audio:true});
    const src = audioCtx.createMediaStreamSource(stream);
    analyser = audioCtx.createAnalyser(); analyser.fftSize = 256;
    src.connect(analyser);
    const buf = new Uint8Array(analyser.frequencyBinCount);
    const vu = $('#vu');
    const draw = ()=>{
      analyser.getByteFrequencyData(buf);
      const v = buf.reduce((a,b)=>a+b,0)/buf.length;
      vu.style.width = Math.min(100, Math.round(v/2))+"%";
      raf = requestAnimationFrame(draw);
    };
    draw();
  }catch(e){}
}
function stopMicVU(){
  if(raf) cancelAnimationFrame(raf);
  $('#vu').style.width="0%";
}

/* ---------- LOGS (poll demo) ---------- */
setInterval(()=>{
  // simpele heartbeat in log ter test
  const el = $('#logBox'); if(!el) return;
  const t = new Date().toLocaleTimeString();
  el.textContent = (t+"  tick\n"+el.textContent).slice(0,8000);
}, 5000);

/* go */
init();